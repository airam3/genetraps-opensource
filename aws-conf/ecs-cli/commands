aws iam --region us-east-1 create-role --role-name ecsTaskExecutionRole --assume-role-policy-document file://ecs-role.json --profile genetraps
aws iam --region us-east-1 attach-role-policy --role-name ecsTaskExecutionRole --policy-arn arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy --profile genetraps
ecs-cli configure --cluster genetraps --region us-east-1 --default-launch-type FARGATE --config-name genetraps
ecs-cli configure profile --access-key $AWS_ACCESS_KEY_ID --secret-key $AWS_SECRET_ACCESS_KEY --profile-name genetraps
ecs-cli up --aws-profile genetraps
### note VPC ID that was created in up task
aws ec2 create-security-group --group-name "ecs-cli-sg" --description "ECS CLI group" --vpc-id $ECS_CLI_VPC_ID --profile genetraps
aws ec2 authorize-security-group-ingress --group-id $ECS_CLI_SG_ID --protocol tcp --port 80 --cidr 0.0.0.0/0 --profile genetraps
aws ec2 authorize-security-group-ingress --group-id $ECS_CLI_SG_ID --protocol tcp --port 8081 --cidr 0.0.0.0/0 --profile genetraps
aws ec2 authorize-security-group-ingress --group-id $ECS_CLI_SG_ID --protocol tcp --port 8082 --cidr 0.0.0.0/0 --profile genetraps
aws ec2 authorize-security-group-ingress --group-id $ECS_CLI_SG_ID --protocol tcp --port 8083 --cidr 0.0.0.0/0 --profile genetraps
aws ec2 authorize-security-group-ingress --group-id $ECS_CLI_SG_ID --protocol tcp --port 8084 --cidr 0.0.0.0/0 --profile genetraps
aws ec2 authorize-security-group-ingress --group-id $ECS_CLI_SG_ID --protocol tcp --port 8085 --cidr 0.0.0.0/0 --profile genetraps
aws ec2 authorize-security-group-ingress --group-id $ECS_CLI_SG_ID --protocol tcp --port 8086 --cidr 0.0.0.0/0 --profile genetraps
aws ec2 authorize-security-group-ingress --group-id $ECS_CLI_SG_ID --protocol tcp --port 8087 --cidr 0.0.0.0/0 --profile genetraps
aws ec2 authorize-security-group-ingress --group-id $ECS_CLI_SG_ID --protocol tcp --port 8088 --cidr 0.0.0.0/0 --profile genetraps
aws ec2 authorize-security-group-ingress --group-id $ECS_CLI_SG_ID --protocol tcp --port 8089 --cidr 0.0.0.0/0 --profile genetraps
aws elbv2 create-load-balancer --name "$ECS_CLI_CLUSTER_NAME-load-balancer" --subnets $ECS_CLI_SUBNET1_ID $ECS_CLI_SUBNET2_ID --security-groups $ECS_CLI_SG_ID --profile genetraps


aws ecr create-repository --repository-name genetraps/client-index --profile genetraps
